// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = never
type AppRouteHandlerRoutes = "/api/auth/logout" | "/api/auth/logout-all" | "/api/auth/me" | "/api/auth/refresh" | "/api/auth/register" | "/api/auth/request-otp" | "/api/auth/send-otp" | "/api/auth/sessions" | "/api/auth/sessions/[sessionId]" | "/api/auth/test-otp" | "/api/auth/test-verify" | "/api/auth/verify-otp" | "/api/dashboard/device-health" | "/api/dashboard/recent-alarms" | "/api/dashboard/stats" | "/api/devices" | "/api/devices/[deviceId]" | "/api/devices/[deviceId]/config" | "/api/devices/[deviceId]/diagnostic" | "/api/devices/[deviceId]/ota" | "/api/devices/[deviceId]/output" | "/api/devices/[deviceId]/status" | "/api/devices/[deviceId]/system" | "/api/groups" | "/api/groups/[groupId]" | "/api/groups/[groupId]/devices" | "/api/users" | "/api/users/[userId]/approve"
type PageRoutes = never
type LayoutRoutes = never
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/api/auth/logout": {}
  "/api/auth/logout-all": {}
  "/api/auth/me": {}
  "/api/auth/refresh": {}
  "/api/auth/register": {}
  "/api/auth/request-otp": {}
  "/api/auth/send-otp": {}
  "/api/auth/sessions": {}
  "/api/auth/sessions/[sessionId]": { "sessionId": string; }
  "/api/auth/test-otp": {}
  "/api/auth/test-verify": {}
  "/api/auth/verify-otp": {}
  "/api/dashboard/device-health": {}
  "/api/dashboard/recent-alarms": {}
  "/api/dashboard/stats": {}
  "/api/devices": {}
  "/api/devices/[deviceId]": { "deviceId": string; }
  "/api/devices/[deviceId]/config": { "deviceId": string; }
  "/api/devices/[deviceId]/diagnostic": { "deviceId": string; }
  "/api/devices/[deviceId]/ota": { "deviceId": string; }
  "/api/devices/[deviceId]/output": { "deviceId": string; }
  "/api/devices/[deviceId]/status": { "deviceId": string; }
  "/api/devices/[deviceId]/system": { "deviceId": string; }
  "/api/groups": {}
  "/api/groups/[groupId]": { "groupId": string; }
  "/api/groups/[groupId]/devices": { "groupId": string; }
  "/api/users": {}
  "/api/users/[userId]/approve": { "userId": string; }
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
